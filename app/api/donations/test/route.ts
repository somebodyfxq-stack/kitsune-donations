import { NextRequest, NextResponse } from "next/server";
import { getServerSession } from "next-auth/next";
import { authOptions } from "@/lib/auth";
import { appendDonationEvent, getMonobankSettings } from "@/lib/store";
import { prisma } from "@/lib/db";
import { broadcastDonation } from "@/lib/sse";

export async function POST(_request: NextRequest) {
  try {
    const session = await getServerSession(authOptions);
    if (!(session as any)?.user?.id) {
      return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
    }

    const userId = (session as any).user.id;
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
    const user = await prisma.user.findUnique({
      where: { id: userId }
    });
    
    if (!user) {
      return NextResponse.json({ 
        error: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π" 
      }, { status: 404 });
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –ø—ñ–¥–∫–ª—é—á–µ–Ω–∞ –±–∞–Ω–∫–∞
    const settings = await getMonobankSettings(userId);
    if (!settings?.jarId) {
      return NextResponse.json({ 
        error: "–°–ø–æ—á–∞—Ç–∫—É –ø—ñ–¥–∫–ª—é—á—ñ—Ç—å –±–∞–Ω–∫—É –¥–ª—è –¥–æ–Ω–∞—Ç—ñ–≤" 
      }, { status: 400 });
    }

        // –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–Ω–∞—Ç—É
    const testMessages = [
      // –ö–æ—Ä–æ—Ç–∫—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
      "–î—è–∫—É—é –∑–∞ —Å—Ç—Ä—ñ–º! üíú",
      "–ü—Ä–æ–¥–æ–≤–∂—É–π —É —Ç–æ–º—É –∂ –¥—É—Å—ñ! üî•",
      "–ü—ñ–¥—Ç—Ä–∏–º—É—é –∫–∞–Ω–∞–ª! üöÄ",
      "–ö—Ä—É—Ç–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç! üëç",
      "–ö–ª–∞—Å–Ω–∏–π —Å—Ç—Ä—ñ–º–µ—Ä! üéÆ",
      
      // –°–µ—Ä–µ–¥–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (~150 —Å–∏–º–≤–æ–ª—ñ–≤)
      "–ü—Ä–∏–≤—ñ—Ç! –î—è–∫—É—é —Ç–æ–±—ñ –∑–∞ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç! –î–∏–≤–ª—é—Å—è —Ç–≤–æ—ó —Å—Ç—Ä—ñ–º–∏ –≤–∂–µ –∫—ñ–ª—å–∫–∞ –º—ñ—Å—è—Ü—ñ–≤ —ñ –∑–∞–≤–∂–¥–∏ –æ—Ç—Ä–∏–º—É—é –º–æ—Ä–µ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è. –ü—Ä–æ–¥–æ–≤–∂—É–π!",
      "–¢–≤–æ—è –µ–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–∞! –î—è–∫—É—é –∑–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω—ñ –µ–º–æ—Ü—ñ—ó —Ç–∞ –≥–∞—Ä–Ω–∏–π –Ω–∞—Å—Ç—Ä—ñ–π. –û—Å—å –Ω–µ–≤–µ–ª–∏–∫–∞ –ø–æ–¥—è–∫–∞ –∑–∞ —Ç–≤–æ—é –ø—Ä–∞—Ü—é!",
      
      // –î–æ–≤–≥—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–æ–±—Ä—ñ–∂—É—Ç—å—Å—è –¥–æ 200 —Å–∏–º–≤–æ–ª—ñ–≤)
      "–ü—Ä–∏–≤—ñ—Ç! –•–æ—á—É —Å–∫–∞–∑–∞—Ç–∏ –≤–µ–ª–∏—á–µ–∑–Ω–µ –¥—è–∫—É—é –∑–∞ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω—É —Ä–æ–±–æ—Ç—É, —è–∫—É —Ç–∏ —Ä–æ–±–∏—à –∫–æ–∂–µ–Ω –¥–µ–Ω—å. –¢–≤–æ—ó —Å—Ç—Ä—ñ–º–∏ - —Ü–µ —Å–ø—Ä–∞–≤–∂–Ω—î –¥–∂–µ—Ä–µ–ª–æ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è —Ç–∞ –ø–æ–∑–∏—Ç–∏–≤—É –¥–ª—è —Ç–∏—Å—è—á –ª—é–¥–µ–π –ø–æ –≤—Å—å–æ–º—É —Å–≤—ñ—Ç—É. –Ø —Å–ª—ñ–¥–∫—É—é –∑–∞ —Ç–≤–æ—ó–º –∫–∞–Ω–∞–ª–æ–º –≤–∂–µ –±—ñ–ª—å—à–µ —Ä–æ–∫—É —ñ –º–æ–∂—É —Å–∫–∞–∑–∞—Ç–∏, —â–æ —Ç–≤–æ—è –µ–≤–æ–ª—é—Ü—ñ—è —è–∫ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–µ–π–∫–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –≤—Ä–∞–∂–∞—î. –í—ñ–¥ –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –Ω–µ–≤–ø–µ–≤–Ω–µ–Ω–∏—Ö –∫—Ä–æ–∫—ñ–≤ –¥–æ –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è, —è–∫–∏–π —Ç–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î—à –∑–∞—Ä–∞–∑ - —Ü–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —à–ª—è—Ö –º–∞–π—Å—Ç—Ä–∞ —Å–≤–æ—î—ó —Å–ø—Ä–∞–≤–∏. –¢–≤–æ—è —Ö–∞—Ä–∏–∑–º–∞, –≤–º—ñ–Ω–Ω—è —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è –∑ –∞—É–¥–∏—Ç–æ—Ä—ñ—î—é —Ç–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –≤–µ—Å–µ–ª–æ—â—ñ–≤ —Ä–æ–±–∏—Ç—å...",
      "–î–æ—Ä–æ–≥–∏–π —Å—Ç—Ä—ñ–º–µ—Ä–µ! –°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ–π —Å—Ç—Ä—ñ–º –±—É–≤ –ø—Ä–æ—Å—Ç–æ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏—á–Ω–∏–º! –°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—Ç–∏ –∑–∞ —Ç–∏–º, —è–∫ —Ç–∏ –≥—Ä–∞—î—à —Ç–∞ –æ–¥–Ω–æ—á–∞—Å–Ω–æ –≤–µ–¥–µ—à –¥—ñ–∞–ª–æ–≥ –∑ —á–∞—Ç–æ–º - —Ü–µ —Å–ø—Ä–∞–≤–∂–Ω—î –º–∏—Å—Ç–µ—Ü—Ç–≤–æ. –¢–≤–æ—è –∑–¥–∞—Ç–Ω—ñ—Å—Ç—å —Ä–æ–±–∏—Ç–∏ –Ω–∞–≤—ñ—Ç—å –Ω–∞–π—Å–∫–ª–∞–¥–Ω—ñ—à—ñ –º–æ–º–µ–Ω—Ç–∏ —É –≥—Ä—ñ –≤–µ—Å–µ–ª–∏–º–∏ —Ç–∞ –∑–∞—Ö–æ–ø–ª–∏–≤–∏–º–∏ –∑–∞—Å–ª—É–≥–æ–≤—É—î –Ω–∞–π–≤–∏—â–∏—Ö –ø–æ—Ö–≤–∞–ª. –Ø –∑–∞–≤–∂–¥–∏ –∑ –Ω–µ—Ç–µ—Ä–ø—ñ–Ω–Ω—è–º —á–µ–∫–∞—é –Ω–∞ —Ç–≤–æ—ó —Å—Ç—Ä—ñ–º–∏, –∞–¥–∂–µ –∑–Ω–∞—é, —â–æ –æ—Ç—Ä–∏–º–∞—é –Ω–µ –ª–∏—à–µ —è–∫—ñ—Å–Ω–∏–π –≥–µ–π–º–ø–ª–µ–π, –∞–ª–µ –π –º–æ—Ä–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏—Ö –µ–º–æ—Ü—ñ–π. –¢–≤–æ—è —Å–ø—ñ–ª—å–Ω–æ—Ç–∞ - —Ü–µ –æ–¥–Ω–∞ –≤–µ–ª–∏–∫–∞ –¥—Ä—É–∂–Ω–∞ —Ä–æ–¥–∏–Ω–∞, —ñ —Å–∞–º–µ –∑–∞–≤–¥—è–∫–∏ —Ç–≤–æ—î–º—É –ª—ñ–¥–µ—Ä—Å—Ç–≤—É –≤–æ–Ω–∞ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è —Ç–∞–∫–æ—é —Ç–µ–ø–ª–æ—é.",
      "Wow! –ù–µ–º–æ–∂–ª–∏–≤–æ –ø–æ–≤—ñ—Ä–∏—Ç–∏, –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –∫—Ä—É—Ç–æ —Ç–∏ –ø—Ä–æ–≤–æ–¥–∏—à —Å–≤–æ—ó —Å—Ç—Ä—ñ–º–∏! –ö–æ–∂–Ω–æ–≥–æ —Ä–∞–∑—É, –∫–æ–ª–∏ –∑–∞—Ö–æ–¥–∂—É –Ω–∞ —Ç–≤—ñ–π –∫–∞–Ω–∞–ª, –≤—ñ–¥—á—É–≤–∞—é —Å–µ–±–µ —è–∫ —É–¥–æ–º–∞ - –Ω–∞—Å—Ç—ñ–ª—å–∫–∏ —Ç–µ–ø–ª–∞ —Ç–∞ –¥—Ä—É–∂–Ω—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –ø–∞–Ω—É—î —Ç—É—Ç. –¢–≤–æ—è –µ–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞—Ä–∞–∑–ª–∏–≤–∞, —ñ –Ω–∞–≤—ñ—Ç—å –ø—ñ—Å–ª—è –≤–∞–∂–∫–æ–≥–æ —Ä–æ–±–æ—á–æ–≥–æ –¥–Ω—è —Ç–≤–æ—ó —Å—Ç—Ä—ñ–º–∏ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –º–µ–Ω—ñ —Ä–æ–∑—Å–ª–∞–±–∏—Ç–∏—Å—è —Ç–∞ –∑–∞–±—É—Ç–∏ –ø—Ä–æ –≤—Å—ñ –ø—Ä–æ–±–ª–µ–º–∏. –û—Å–æ–±–ª–∏–≤–æ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è —Ç–≤—ñ–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –≤–∑–∞—î–º–æ–¥—ñ—ó –∑ –≥–ª—è–¥–∞—á–∞–º–∏ - —Ç–∏ –∑–∞–≤–∂–¥–∏ –∑–Ω–∞—Ö–æ–¥–∏—à —á–∞—Å –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è, –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏, –ø–æ–∂–∞—Ä—Ç—É–≤–∞—Ç–∏. –¶–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —Ç–∞–ª–∞–Ω—Ç - –±—É—Ç–∏ –Ω–µ –ø—Ä–æ—Å—Ç–æ –≥–µ–π–º–µ—Ä–æ–º..."
    ];

    const testNicknames = [
      "CoolViewer2024", "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π–ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞—á", "StreamFan_UA", "GenerousSupporter", 
      "LoyalFollower", "ContentLover", "TrueGamer_UA", "KindDonator", "StreamHero", "BigFan_2024"
    ];

    const testAmounts = [10, 25, 50, 100, 150, 200, 300, 500, 777, 1000];

    // –¢–µ—Å—Ç–æ–≤—ñ YouTube –≤—ñ–¥–µ–æ
    const testYouTubeVideos = [
      "https://www.youtube.com/watch?v=dQw4w9WgXcQ", // Rick Roll - Never Gonna Give You Up
      "https://www.youtube.com/watch?v=9bZkp7q19f0", // PSY - GANGNAM STYLE
      "https://youtu.be/fJ9rUzIMcZQ", // Queen - Bohemian Rhapsody
      null, // –î–æ–Ω–∞—Ç –±–µ–∑ –≤—ñ–¥–µ–æ
      null, // –î–æ–Ω–∞—Ç –±–µ–∑ –≤—ñ–¥–µ–æ
    ];

    const randomMessage = testMessages[Math.floor(Math.random() * testMessages.length)];
    const randomNickname = testNicknames[Math.floor(Math.random() * testNicknames.length)];
    const randomAmount = testAmounts[Math.floor(Math.random() * testAmounts.length)];
    const randomYouTubeUrl = testYouTubeVideos[Math.floor(Math.random() * testYouTubeVideos.length)];

    console.log('üé≤ Generating test donation:', {
      nickname: randomNickname,
      amount: randomAmount,
      hasYouTube: !!randomYouTubeUrl,
      youtubeUrl: randomYouTubeUrl
    });

    // –ì–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π identifier –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–Ω–∞—Ç—É
    const testIdentifier = `test-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;

    // –°–ø–æ—á–∞—Ç–∫—É —Å—Ç–≤–æ—Ä—é—î–º–æ DonationIntent –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–æ–Ω–∞—Ç—É
    await prisma.donationIntent.create({
      data: {
        identifier: testIdentifier,
        nickname: randomNickname,
        message: randomMessage,
        amount: randomAmount,
        youtubeUrl: randomYouTubeUrl,
        streamerId: userId,
        createdAt: new Date()
      } as any
    });

    // –¢–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π –¥–æ–Ω–∞—Ç –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    await appendDonationEvent({
      identifier: testIdentifier,
      nickname: randomNickname,
      message: randomMessage,
      amount: randomAmount,
      monoComment: `–¢–µ—Å—Ç–æ–≤–∏–π –¥–æ–Ω–∞—Ç ${randomAmount}‚Ç¥`,
      youtubeUrl: randomYouTubeUrl, // –í–∏–ø–∞–¥–∫–æ–≤–µ YouTube –≤—ñ–¥–µ–æ –∞–±–æ null
      jarTitle: settings.jarTitle || "–ë–∞–Ω–∫–∞ Monobank", // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–∑–≤—É –±–∞–Ω–∫–∏ –Ω–∞ –º–æ–º–µ–Ω—Ç –¥–æ–Ω–∞—Ç—É
      streamerId: userId,
      createdAt: new Date()
    } as any);

    // –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    const donationEvent = {
      id: Date.now(), // –ü—Ä–æ—Å—Ç–∏–π ID –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
      identifier: testIdentifier,
      nickname: randomNickname,
      message: randomMessage,
      amount: randomAmount,
      monoComment: `–¢–µ—Å—Ç–æ–≤–∏–π –¥–æ–Ω–∞—Ç ${randomAmount}‚Ç¥`,
      youtubeUrl: randomYouTubeUrl,
      jarTitle: settings.jarTitle || "–ë–∞–Ω–∫–∞ Monobank",
      streamerId: userId,
      createdAt: new Date()
    };

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —É –≤—ñ–¥–∂–µ—Ç —á–µ—Ä–µ–∑ SSE
    const ssePayload = {
      identifier: testIdentifier,
      nickname: randomNickname,
      message: randomMessage,
      amount: randomAmount,
      monoComment: `–¢–µ—Å—Ç–æ–≤–∏–π –¥–æ–Ω–∞—Ç ${randomAmount}‚Ç¥`,
      youtubeUrl: randomYouTubeUrl,
      jarTitle: settings.jarTitle || "–ë–∞–Ω–∫–∞ Monobank",
      createdAt: donationEvent.createdAt.toISOString(),
      streamerId: userId
    };
    
    console.log('üì∫ Broadcasting test donation with YouTube:', {
      ...ssePayload,
      eventType: randomYouTubeUrl ? 'youtube-video' : 'donation'
    });
    broadcastDonation(ssePayload);

    return NextResponse.json({ 
      success: true, 
      donation: {
        ...donationEvent,
        createdAt: donationEvent.createdAt.toISOString()
      }
    });

  } catch (error) {
    console.error("Test donation creation failed:", error);
    return NextResponse.json(
      { error: "Failed to create test donation" },
      { status: 500 }
    );
  }
}
